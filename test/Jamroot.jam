import os ;
local boost = [ os.environ BOOST ] ;
local io_tools = ../../io_tools ;
local logsys = ../../logsys ;
local disposer = .. ;

use-project /boost
	: $(boost)
	;

use-project /logsys
	: $(logsys)
	;

use-project /disposer
	: $(disposer)
	;

project disposer_tests
	:
	:
	requirements <include>.

	<warnings>all
	<c++-template-depth>1024

	<define>BOOST_HANA_CONFIG_ENABLE_STRING_UDL
	<define>BOOST_ASIO_HAS_STD_CHRONO

	<toolset>gcc:<cxxflags>-std=gnu++1z
	<toolset>gcc:<cxxflags>-fconstexpr-depth=1024
	<toolset>gcc:<cxxflags>-Wall
	<toolset>gcc:<cxxflags>-Wextra
	<toolset>gcc:<linkflags>-lpthread
	<toolset>gcc:<linkflags>-ldl

	<toolset>clang:<cxxflags>-std=c++1z
	<toolset>clang:<cxxflags>-fconstexpr-depth=1024
	<toolset>clang:<cxxflags>-Wall
	<toolset>clang:<cxxflags>-Wextra
	<toolset>clang:<cxxflags>-Wno-gnu-string-literal-operator-template
	<toolset>clang:<cxxflags>-stdlib=libc++
	<toolset>clang:<linkflags>-lpthread
	<toolset>clang:<linkflags>-ldl
	<toolset>clang:<linkflags>-lc++abi
	<toolset>clang:<linkflags>-stdlib=libc++

	<include>$(boost)
	<include>$(io_tools)/include
	<include>$(logsys)/include
	<include>../include
	:
	;


exe parse_errors
	:
	parse_errors.cpp
	/logsys//logsys
	/disposer//disposer
	;

exe parse_check
	:
	parse_check.cpp
	/logsys//logsys
	/disposer//disposer
	;

exe output
	:
	output.cpp
	/disposer//disposer
	/logsys//logsys
	;

exe input
	:
	input.cpp
	/disposer//disposer
	/logsys//logsys
	;

exe parameter
	:
	parameter.cpp
	/disposer//disposer
	/logsys//logsys
	;

exe module_test
	:
	module_test.cpp
	/disposer//disposer
	/logsys//logsys
	;

exe register
	:
	register.cpp
	/disposer//disposer
	/logsys//logsys
	;
